---
version: "1"
services:
  tailscale:
    container_name: tsmill
    hostname: tsmill
    image: tailscale/tailscale:latest
    volumes:
      - ~/services/tailscale/config:/var/lib
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    environment:
      - PUID=1001
      - PGID=1001
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_HOSTNAME=${TS_HOSTNAME}
      - TS_USERSPACE=false
      - TS_AUTH_ONCE=false
    command: tailscaled
    networks:
      - docker_bridge
    depends_on:
      - headscale
    restart: unless-stopped

  ombi:
    container_name: ombi
    image: "linuxserver/ombi:latest"
    network_mode: service:tailscale
    environment:
      - PUID=1001
      - PGID=1001
    volumes:
      - ~/services/ombi/config:/config
    restart: unless-stopped

  headscale:
    image: headscale/headscale:latest
    container_name: headscale
    networks:
      - docker_bridge
    entrypoint: headscale serve
    volumes:
      - ~/services/headscale:/etc/headscale
    environment:
      - PUID=1001
      - PGID=1001
    restart: unless-stopped

  hswebui:
    image: ghcr.io/ifargle/headscale-webui:latest
    container_name: hswebui
    networks:
      - docker_bridge
    environment:
      - COLOR=grey
      - HS_SERVER=http://headscale:8080
      - DOMAIN_NAME=${DOMAIN}
      - KEY=${HS_AUTHKEY}
      - AUTH_TYPE=basic
      - BASIC_AUTH_USER=${BASIC_USER}
      - BASIC_AUTH_PASS=${BASIC_PASS}
    volumes:
      - ~/services/headscaleui:/data  # this must be owned by user `1000:1000`
      - ~/services/headscale:/etc/headscale/:ro
    restart: unless-stopped

  caddy:
    image: caddy:2-alpine
    container_name: caddy
    depends_on:
      - ombi
      - hswebui
      #- rutorrent
    volumes:
      - ~/services/caddy/Caddyfile:/etc/caddy/Caddyfile
      - ~/services/caddy/data:/data
      - ~/services/caddy/config:/config
    networks:
      - docker_bridge
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped

  rutorrent:
    image: crazymax/rtorrent-rutorrent:latest
    container_name: rutorrent
#     network_mode: service:tailscale  # can make the dashboard public if needed, it has pw auth.
    networks:
      - docker_bridge
    ports:
#       - 8080:8080
      - 50000:50000
    env_file:
      - rtorrent-rutorrent.env
    volumes:
      - ~/services/rtorrent/data:/data
      - ~/services/rtorrent/downloads:/downloads
      - ~/services/rtorrent/passwd:/passwd
      - ~/services/rtorrent/log:/log
    restart: unless-stopped

networks:
  docker_bridge:
    driver: bridge