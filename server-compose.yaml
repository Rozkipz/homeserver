---
version: "1"
services:
  tailscale:
    container_name: tsmill
    hostname: tsmill
    image: tailscale/tailscale:latest
    volumes:
      - ~/services/tailscale/config:/var/lib
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    environment:
      - PUID=1001
      - PGID=1001
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_HOSTNAME=${TS_HOSTNAME}
      - TS_USERSPACE=false
      - TS_AUTH_ONCE=false
    command: tailscaled
    networks:
      - docker_bridge
    depends_on:
      - headscale
    restart: unless-stopped

  ombi:
    container_name: ombi
    image: "linuxserver/ombi:latest"
    network_mode: service:tailscale
    environment:
      - PUID=1001
      - PGID=1001
    volumes:
      - ~/services/ombi/config:/config
    restart: unless-stopped

  sshfs:
    container_name: sshfs
    image: lscr.io/linuxserver/openssh-server:latest
    network_mode: service:tailscale
    environment:
      - PUID=1001
      - PGID=1001
      - PUBLIC_KEY_FILE=/pubkeys
    volumes:
      - ~/services/rtorrent/downloads:/downloads
      - ~/services/sshfs/pubkeys:/pubkeys
      - ~/services/sshfs/config:/config
    restart: unless-stopped

  headscale:
    image: headscale/headscale:latest
    container_name: headscale
    networks:
      - docker_bridge
    entrypoint: headscale serve
    volumes:
      - ~/services/headscale:/etc/headscale
    environment:
      - PUID=1001
      - PGID=1001
    restart: unless-stopped

  hswebui:
    image: ghcr.io/ifargle/headscale-webui:latest
    container_name: hswebui
    networks:
      - docker_bridge
    environment:
      - COLOR=grey
      - HS_SERVER=http://headscale:8080
      - DOMAIN_NAME=${DOMAIN}
      - KEY=${HS_AUTHKEY}
      - AUTH_TYPE=basic
      - BASIC_AUTH_USER=${BASIC_USER}
      - BASIC_AUTH_PASS=${BASIC_PASS}
    volumes:
      - ~/services/headscaleui:/data  # this must be owned by user `1000:1000`
      - ~/services/headscale:/etc/headscale/:ro
    restart: unless-stopped

  caddy:
    image: caddy:2-alpine
    container_name: caddy
    volumes:
      - ~/services/caddy/Caddyfile:/etc/caddy/Caddyfile
      - ~/services/caddy/data:/data
      - ~/services/caddy/config:/config
    networks:
      - docker_bridge
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped

  whitebophir:
    image: lovasoa/wbo:latest 
    container_name: whitebophir
    networks:
      - docker_bridge
    volumes:
      - ~/services/whitebophir:/opt/app/server-data
    restart: unless-stopped

  rtorrent-rutorrent:
    image: crazymax/rtorrent-rutorrent:latest
    container_name: rtorrent-rutorrent
    network_mode: service:tailscale  # This is still needed to "fake" the `8080` coming from tsmill on tsmonster's side, as we aren't doing a subnet there.
    env_file:
      - rtorrent-rutorrent.env
    volumes:
      - ~/services/rtorrent/data:/data
      - ~/services/rtorrent/downloads:/downloads
      - ~/services/rtorrent/passwd:/passwd
      - ~/services/rtorrent/log:/log
    ulimits:
      nproc: 65535
      nofile:
        soft: 32000
        hard: 40000
    restart: unless-stopped

networks:
  docker_bridge:
    driver: bridge