---
version: "1"
services:
  tailscale:
    container_name: tsmonster
    hostname: tsmonster
    image: tailscale/tailscale:latest
    networks:
      - internal
    volumes:
      - ~/services/tailscale/config:/var/lib
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    environment:
      - PUID=1000
      - PGID=1000
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_HOSTNAME=${TS_HOSTNAME}
      - TS_USERSPACE=false
      - TS_AUTH_ONCE=false
    command: tailscaled
    restart: always

  dockerui:
    container_name: dockerui
    image: "otothea/docker-ui:latest"
    environment:
      - PUID=1000
      - PGID=1000
    network_mode: service:tailscale
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
#     ports:
#       - "9898:9898"

#   heimdall:
#     image: lscr.io/linuxserver/heimdall:latest
#     network_mode: service:tailscale  # fairly sure this is not needed and will cause issues with PF below. Only want this locally anyway really.
#     container_name: heimdall
#     environment:
#       - PUID=1000
#       - PGID=1000
#     volumes:
#       - ~/services/heimdall/config:/config
#     ports:
#       - 80:80
#       - 443:443
#     restart: always

#   whitebophir:
#     image: lovasoa/wbo:latest
#     container_name: whitebophir
#     networks:
#       - docker_bridge
#     volumes:
#       - ~/services/whitebophir:/opt/app/server-data
#     restart: always

#   archivebox:
#     container_name: archivebox
#     image: "archivebox/archivebox:latest"
#     network_mode: service:tailscale
#     environment:
#       - PUID=1000
#       - PGID=1000
# #     ports:
# #       - "8000:8000"
#     volumes:
#       - ~/services/archivebox/data/:/data/
#     restart: always

#   bazarr:
#     container_name: bazarr
#     image: "linuxserver/bazarr:latest"
#     network_mode: service:tailscale
#     environment:
#       - PUID=1000
#       - PGID=1000
#     ports:
#       - "6767:6767"
#     volumes:
#       - ~/services/bazarr/config:/config
#       - /mnt/drive1/TV:/drive1/TV
#       - /mnt/drive1/TV:/drive1/Movies
#       - /mnt/drive2/TV:/drive2/TV
#       - /mnt/drive2/TV:/drive2/Movies
#       - /mnt/drive3/TV:/drive3/TV
#       - /mnt/drive3/TV:/drive3/Movies
#       - /mnt/drive4/TV:/drive4/TV
#       - /mnt/drive4/TV:/drive4/Movies
#       - /mnt/drive5/TV:/drive5/TV
#       - /mnt/drive5/TV:/drive5/Movies
#       - /mnt/drive6/TV:/drive6/TV
#       - /mnt/drive6/TV:/drive6/Movies
#       - /mnt/drive7/TV:/drive7/TV
#       - /mnt/drive7/TV:/drive7/Movies
#       - /mnt/drive8/TV:/drive8/TV
#       - /mnt/drive8/TV:/drive8/Movies
#       - /mnt/drive9/TV:/drive9/TV
#       - /mnt/drive9/TV:/drive9/Movies
#       - /mnt/drive10/TV:/drive10/TV
#       - /mnt/drive10/TV:/drive10/Movies
#       - /mnt/drive11/TV:/drive11/TV
#       - /mnt/drive11/TV:/drive11/Movies
#     depends_on:
#       - sonarr
#       - radarr
#     restart: always

  checkrr:
    container_name: checkrr
    image: "aetaric/checkrr:latest"
    network_mode: service:tailscale
    environment:
      - PUID=1000
      - PGID=1000
#     ports:
#       - "8585:8585"
    volumes:
      - ~/services/checkrr/checkrr.yaml:/etc/checkrr.yaml
      - ~/services/checkrr/checkrr.db:/checkrr.db
      - /mnt/drive1/TV:/TV1
      - /mnt/drive1/Movies:/Movies1
      - /mnt/drive2/TV:/TV2
      - /mnt/drive2/Movies:/Movies2
      - /mnt/drive3/TV:/TV3
      - /mnt/drive3/Movies:/Movies3
      - /mnt/drive4/TV:/TV4
      - /mnt/drive4/Movies:/Movies4
      - /mnt/drive5/TV:/TV5
      - /mnt/drive5/Movies:/Movies5
      - /mnt/drive6/TV:/TV6
      - /mnt/drive6/Movies:/Movies6
      - /mnt/drive7/TV:/TV7
      - /mnt/drive7/Movies:/Movies7
      - /mnt/drive8/TV:/TV8
      - /mnt/drive8/Movies:/Movies8
      - /mnt/drive9/TV:/TV9
      - /mnt/drive9/Movies:/Movies9
      - /mnt/drive10/TV:/TV10
      - /mnt/drive10/Movies:/Movies10
      - /mnt/drive11/TV:/TV11
      - /mnt/drive11/Movies:/Movies11
    restart: always

#   prowlarr-exporter:
#     container_name: prowlarr-exporter
#     image: "ghcr.io/onedr0p/exportarr:latest"
#     network_mode: service:tailscale
#     command: ["prowlarr"]
#     environment:
#       - PUID=1000
#       - PGID=1000
#       - PORT=9710
#       - URL="http://prowlarr:9696"
#       - APIKEY="abc"
#     ports:
#      - "9710:9710"
#     restart: always

  prowlarr:
    container_name: prowlarr
    image: "lscr.io/linuxserver/prowlarr:latest"
    network_mode: service:tailscale
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ~/services/prowlarr/config:/config
    depends_on:
      - flaresolverr
    restart: always

  flaresolverr:
    container_name: flaresolverr
    image: "ghcr.io/flaresolverr/flaresolverr:latest"
    network_mode: service:tailscale
    environment:
        - PUID=1000
        - PGID=1000
    restart: always

#   duplicati:
#     container_name: duplicati
#     image: "lscr.io/linuxserver/duplicati:latest"
#     network_mode: service:tailscale
#     environment:
#       - PUID=1000
#       - PGID=1000
#     volumes:
#       - ~/services/duplicati/config:/config
#       - ~/services/duplicati/restore:/restore
#       - ~/services/duplicati/backups:/backups
#       - ~/services/duplicati/source:/source
#     ports:
#       - 8200:8200
#     restart: always

#     homer:
#       enabled: true
#       image:
#         repository: "b4bz/homer"
#         version: v23.05.1
#       pullPolicy: Always
#       port: 8080
#       securityContext: {}
#     restart: always

  plex:
    container_name: plex
    image: "linuxserver/plex:latest"
    networks:
      - internal
    ports:
      - 32400:32400
      - 1900:1900/udp
      - 5353:5353/udp
      - 8324:8324
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
      - 32469:32469
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
    volumes:
      - ~/services/plex/config:/config
      - ~/services/plex/transcode:/transcode
      - ~/services/plex/data:/data
      - /mnt/drive1/TV:/TV1
      - /mnt/drive1/Movies:/Movies1
      - /mnt/drive2/TV:/TV2
      - /mnt/drive2/Movies:/Movies2
      - /mnt/drive3/TV:/TV3
      - /mnt/drive3/Movies:/Movies3
      - /mnt/drive4/TV:/TV4
      - /mnt/drive4/Movies:/Movies4
      - /mnt/drive5/TV:/TV5
      - /mnt/drive5/Movies:/Movies5
      - /mnt/drive6/TV:/TV6
      - /mnt/drive6/Movies:/Movies6
      - /mnt/drive7/TV:/TV7
      - /mnt/drive7/Movies:/Movies7
      - /mnt/drive8/TV:/TV8
      - /mnt/drive8/Movies:/Movies8
      - /mnt/drive9/TV:/TV9
      - /mnt/drive9/Movies:/Movies9
      - /mnt/drive10/TV:/TV10
      - /mnt/drive10/Movies:/Movies10
      - /mnt/drive11/TV:/TV11
      - /mnt/drive11/Movies:/Movies11
    restart: always

#   wizarr:
#     container_name: wizarr
#     image: ghcr.io/wizarrrr/wizarr:latest
#     network_mode: service:tailscale
# #     ports:
# #       - 5690:5690
#     volumes:
#       - ~/services/wizarr/database:/data/database
#     environment:
#       - PUID=1000
#       - PGID=1000
#     restart: always

  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr:latest 
    network_mode: service:tailscale
    environment: 
      - PUID=1000 
      - PGID=1000
    volumes:
      - ~/services/radarr/config:/config
      - /mnt/drive1/Movies:/Movies1
      - /mnt/drive2/Movies:/Movies2
      - /mnt/drive3/Movies:/Movies3
      - /mnt/drive4/Movies:/Movies4
      - /mnt/drive5/Movies:/Movies5
      - /mnt/drive6/Movies:/Movies6
      - /mnt/drive7/Movies:/Movies7
      - /mnt/drive8/Movies:/Movies8
      - /mnt/drive9/Movies:/Movies9
      - /mnt/drive10/Movies:/Movies10
      - /mnt/drive11/Movies:/Movies11
      - /mnt/remote/:/downloads/complete  # *arr is just retarded, won't map the folders properly? Just mount in with `/complete/`
    depends_on:
      - prowlarr
    restart: always

#   radarr-exporter:
#     container_name: radarr-exporter
#     image: "ghcr.io/onedr0p/exportarr:latest"
#     command: "radarr"
#     networks:
#       - service:tailscale
#     environment:
#       - URL=http://radarr:7878"
#       - APIKEY=${RADARR_AUTHKEY}
#     PORT: 9708
#     restart: always

  sonarr: 
    container_name: sonarr
    image: lscr.io/linuxserver/sonarr:latest 
    network_mode: service:tailscale
    environment: 
      - PUID=1000 
      - PGID=1000
    volumes:
      - ~/services/sonarr/config:/config
      - /mnt/drive1/TV:/TV1
      - /mnt/drive2/TV:/TV2
      - /mnt/drive3/TV:/TV3
      - /mnt/drive4/TV:/TV4
      - /mnt/drive5/TV:/TV5
      - /mnt/drive6/TV:/TV6
      - /mnt/drive7/TV:/TV7
      - /mnt/drive8/TV:/TV8
      - /mnt/drive9/TV:/TV9
      - /mnt/drive10/TV:/TV10
      - /mnt/drive11/TV:/TV11
      - /mnt/remote/:/downloads/complete  # *arr is just retarded, won't map the folders properly? Just mount in with `/complete/`
    depends_on:
      - prowlarr 
    restart: always

#   sonarr-exporter:
#     container_name: sonarr-exporter
#     image: "ghcr.io/onedr0p/exportarr:latest"
#     command: "sonarr"
#     networks:
#       - service:tailscale
#     depends_on:
#       - sonarr
#     environment:
#       - URL=http://sonarr:8989
#       - APIKEY=${SONAR_AUTHKEY}
#       PORT: 9707
#     ports:
#       - "9707:9707"
#     restart: always

networks:
  internal:
    driver: bridge
